/* ;;; -*- mode: css-ts; -*- * */

Screen {
    layers: base status; /* Define layers */
}

#status-bar {
    /* dock: top; */
    height: 1;
    background: initial;
    /* color: blue; */
    padding: 0 1;
    /* layer: status; /\* Belongs to the status layer *\/ */
    width: 100%; /* Ensure it spans the width */
    visibility: visible; /* Ensure it's visible */
}
#status-bar Label {
    width: 1fr; /* Make labels fill available space */
}
#status-message {
    content-align: right middle;
}
#status-path {
    content-align: left middle;
}

/* --- Style the Log Pane --- */
#log-pane {
    /* Dock below main content, above status bar/footer */
    dock: bottom;
    /* Height: Fixed 10 lines, adjust as needed */
    height: 10;
    border: thick $primary;
    /* Use a higher layer so it docks *above* the status bar */
    /* layer: log_layer; */
    /* Start hidden */
    display: none;
    /* Add some scrollbar margin if desired */
    /* scrollbar-gutter: stable; */
}
/* --- Class to make the log pane visible --- */
#log-pane.visible {
    display: block; /* Change display to make it visible */
}
Footer {
    /* Ensure footer is also on a high layer if needed,
           but docking usually handles it */
    /* layer: log_layer; */
}

/*****************************************************************************/
/*                               Modal Screens                               */
/*****************************************************************************/

RenameDialog {
    align: center middle;
}

RenameDialog > Vertical {
    /* background: $panel; */
    height: auto;
    width: auto;
    border: thick $primary;
}

RenameDialog > Vertical > * {
    width: auto;
    height: auto;
}

RenameDialog Input {
    width: 40;
    margin: 1;
}

RenameDialog Label {
    margin-left: 2;
}




#file-list {
    width: 1fr; /* Take full width for now */
    /* border-right: thick $accent; */ /* Uncomment if adding preview pane */
    height: 1fr; /* Fill the container height */
    border: round $primary; /* Add a border */
    /* layer: base; /\* Belongs to the base layer *\/ */
    padding: 0 0;
}

/* Target the FileList widget itself if you want to style its overall container */
FileList {
    /* background: #1e1e1e; /\* Dark background *\/ */
    /* border: heavy steelblue; */
    border-title-align: left;
    width: 1fr; /* Occupy available width */
    height: 1fr; /* Occupy available height */
}

/* --- DataTable Header Styling --- */

/* Target the entire header row container within a FileList */
FileList > .DataTable-header {
    background: #005f87; /* A nice dark blue for the header background */
    color: white; /* White text for headers */
    height: 1; /* Keep the header compact, one line tall */
    width: 1fr;
    align-vertical: middle; /* Vertically align text in the middle */
    border-bottom: heavy dodgerblue; /* A strong line under the header */
}


/* Target each individual column header cell */
FileList > .DataTable-header > .DataTable-column-header {
    background: #0077ab; /* Slightly lighter blue for individual cells */
    color: #e0e0e0; /* Off-white text */
    text-align: center; /* Center the text in each header cell */
    text-style: bold; /* Make the header text bold */
    padding: 0 1; /* Add some horizontal padding */
    width: 1fr;
    border-right: thick #005f87; /* A subtle separator between columns */
}

/* Optional: Style the last column header differently (no right border) */
FileList > .DataTable-header > .DataTable-column-header:last-child {
    border-right: none;
}

